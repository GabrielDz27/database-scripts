DECLARE 
	X NUMBER;
	Y NUMBER;
BEGIN
	DBMS_OUTPUT.PUT_LINE(' ------------CALCULADORA--------------');
    Y := 2;
    X := 2;
	CALC(3,2);
END;
CREATE OR REPLACE PROCEDURE CALC(X IN NUMBER, Y IN NUMBER) IS
	V_EXCEPTION EXCEPTION;
BEGIN
    IF X IS NULL OR Y IS NULL THEN
		RAISE V_EXCEPTION;
    END IF;
	DBMS_OUTPUT.PUT_LINE('SOMA');
	DBMS_OUTPUT.PUT_LINE(' X + Y = '|| (X+Y));
	DBMS_OUTPUT.PUT_LINE('DIFERENÇA');
	DBMS_OUTPUT.PUT_LINE(' X - Y = '|| (X-Y));
	DBMS_OUTPUT.PUT_LINE('PRDUTO');
	DBMS_OUTPUT.PUT_LINE(' X x Y = '|| (X*Y));
	DBMS_OUTPUT.PUT_LINE('QUOCIENTE');
	DBMS_OUTPUT.PUT_LINE(' X:Y = ' || X/Y);
	DBMS_OUTPUT.PUT_LINE('RESTO DA DIVISÃO');
	DBMS_OUTPUT.PUT_LINE(' X % Y =' || MOD(X,Y));

EXCEPTION
    WHEN V_EXCEPTION THEN
    	DBMS_OUTPUT.PUT_LINE('DADOS MAL INSERIDOS');
END;



--1
CREATE OR REPLACE PROCEDURE NOMEEE (V_ID IN PESSOA.ID%TYPE, V_NOME OUT PESSOA.NOME%TYPE) IS
BEGIN 
    SELECT NOME INTO V_NOME FROM PESSOA WHERE ID = V_ID;

	IF V_NOME IS NULL THEN
        V_NOME := 'PESSOA NÃO ENCONTRADA';
	END IF;
END;

---2
CREATE OR REPLACE PROCEDURE P_TABUADA (V_N IN NUMBER) IS
 	V_EXCEPTION EXCEPTION;
BEGIN 
    IF V_N < 0 THEN 
		RAISE V_EXCEPTION;
    END IF;
    DBMS_OUTPUT.PUT_LINE('   TABUADA DO ' || V_N);
	FOR V_NM IN 1..10 LOOP
		DBMS_OUTPUT.PUT_LINE('' || (V_N*V_NM));
    END LOOP;
EXCEPTION 
    WHEN V_EXCEPTION THEN 
    	DBMS_OUTPUT.PUT_LINE('ERRO INCOMUM');
END;

DECLARE 
BEGIN
    DBMS_OUTPUT.PUT_LINE('TESTE');
	P_TABUADA(2);
END;


---------3
CREATE OR REPLACE PROCEDURE P_BB IS
	V_ANO NUMBER(4);
BEGIN
	DBMS_OUTPUT.PUT_LINE('ANOS BISSEXTOS APRESENTADOS:');
	FOR V_ANO IN 2000..2100 LOOP
		IF(MOD(V_ANO,4)=0 AND MOD(V_ANO,100) != 0) OR (MOD(V_ANO,400) =0) THEN
        	DBMS_OUTPUT.PUT_LINE(V_ANO);
        END IF;
    END LOOP;
END;

EXEC P_BB();

------4
CREATE OR REPLACE PROCEDURE P_NOT(NRMATR IN ALUNO.NR_MATRICULA%TYPE) IS
	V_ALUNO ALUNO%ROWTYPE;
	V_MEDIA ALUNO.MEDIA%TYPE;
	V_EXCEPTION EXCEPTION;
BEGIN

	SELECT * INTO V_ALUNO FROM ALUNO WHERE NR_MATRICULA = NRMATR;
	V_MEDIA := (V_ALUNO.A1 + V_ALUNO.A2 + V_ALUNO.A3 + V_ALUNO.A4) / 4;
	IF V_MEDIA < 6 AND V_MEDIA >= 0 THEN
		UPDATE ALUNO SET MEDIA = V_MEDIA, RESULTADO = 'REPROVADO' WHERE NR_MATRICULA =  NRMATR;
    ELSIF V_MEDIA >= 6 AND V_MEDIA <= 10 THEN
        UPDATE ALUNO SET MEDIA = V_MEDIA, RESULTADO = 'APROVADO' WHERE NR_MATRICULA =  NRMATR;
    ELSE 
        RAISE V_EXCEPTION;
	END IF;
EXCEPTION
    WHEN V_EXCEPTION THEN 
    	DBMS_OUTPUT.PUT_LINE('MEDIA COM ERRO');
END;
EXEC P_NOT(456);
SELECT * FROM ALUNO 

----5
CREATE OR REPLACE PROCEDURE P_S(V_ANO IN LUCRO.ANO%TYPE, MM IN SALARIO.MATRICULA%TYPE) IS 
	V_VALOR LUCRO.VALOR%TYPE;
	V_SALARIO SALARIO.SALARIO%TYPE;
BEGIN
    SELECT VALOR INTO V_VALOR FROM LUCRO WHERE ANO = V_ANO;
	SELECT SALARIO INTO V_SALARIO FROM SALARIO WHERE MATRICULA =MM;
	UPDATE SALARIO S SET S.SALARIO = (V_SALARIO+ ((V_VALOR *0.01)+(V_SALARIO*0.05)))
        WHERE MATRICULA = MM;
	DBMS_OUTPUT.PUT_LINE('MATRICULA: '|| MM ||' BONUS :' || ((V_VALOR *0.01)+V_SALARIO*0.05));
	DBMS_OUTPUT.PUT_LINE('SALARIO NORMAL:' || V_SALARIO);
END;


