BEGIN
    IF TRIANGULO(16 ,20,30 ) = TRUE THEN
		DBMS_OUTPUT.PUT_LINE(' E TRIANGULO DE VERDADE');
	END IF;
END;

CREATE OR REPLACE FUNCTION TRIANGULO(A NUMBER, B NUMBER, C NUMBER) RETURN BOOLEAN IS
	V_MSG VARCHAR2(46);
	TRI BOOLEAN;
    V_EXCEPTION EXCEPTION;
BEGIN
    IF A IS NULL OR B IS NULL OR C  IS NULL THEN
		RAISE V_EXCEPTION;
    END IF;
		TRI := FALSE;
	IF (A + B) > C AND (A + C) > B AND (C + B) > A THEN
		TRI := TRUE;
    END IF;

	RETURN TRI;
EXCEPTION
    WHEN V_EXCEPTION THEN
    	DBMS_OUTPUT.PUT_LINE('DADOS MAL INSERIDOS');
END;

--
BEGIN
	DBMS_OUTPUT.PUT_LINE(CONFEREIDADE(18));
END;

CREATE OR REPLACE FUNCTION CONFEREIDADE(IDADE NUMBER) RETURN VARCHAR2 IS
	V_MSG VARCHAR2(46);
    V_EXCEPTION EXCEPTION;
BEGIN
    IF IDADE IS NULL THEN
		RAISE V_EXCEPTION;
    END IF;

	IF IDADE > 17 THEN
    	V_MSG := 'ES DE MAIOR = VAI TER QUE PAGAR BOLETO!!';
	ELSE 
    	V_MSG := 'ES DE MENOR = VAI TER QUE OBEDECER OS MAIORES!!';
    END IF;

	RETURN V_MSG;
EXCEPTION
    WHEN V_EXCEPTION THEN
    	DBMS_OUTPUT.PUT_LINE('DADOS MAL INSERIDOS');
END;

--1
create or replace function f_cel(valor number) return number is
	valorx number;
begin
	valorx := (valor-32)/1.8;
	return valorx;
end f_cel;

--2
create table funcionarios as select * from hr.employees;
create table departamentos as select * from hr.departments;

CREATE OR REPLACE FUNCTION NOMECOMPLETO (V_EMPLOYEE_ID HR.EMPLOYEES.EMPLOYEE_ID%TYPE) RETURN VARCHAR2 IS
	V_NOME VARCHAR2(46);
BEGIN
	SELECT FIRST_NAME || ' ' || LAST_NAME 
    INTO V_NOME
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID = V_EMPLOYEE_ID;
	RETURN V_NOME;
END NOMECOMPLETO;


SELECT NOMECOMPLETO (101) FROM DUAL;


--3
CREATE OR REPLACE FUNCTION SALARIO (V_EMPLOYEE_ID HR.EMPLOYEES.EMPLOYEE_ID%TYPE) RETURN NUMBER IS
	V_SALARIO NUMBER(8,2);
BEGIN
	SELECT SALARY
    INTO V_SALARIO
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID = V_EMPLOYEE_ID;
	RETURN V_SALARIO;
EXCEPTION 
    WHEN NO_DATA_FOUND THEN
    	DBMS_OUTPUT.PUT_LINE('SEM REGISTRO');
    WHEN TOO_MANY_ROWS THEN
    	DBMS_OUTPUT.PUT_LINE('MAIS DE UM REGISTRO');
END SALARIO;

SELECT SALARIO (101) FROM DUAL;

--4
CREATE OR REPLACE FUNCTION NOMEDEPART (V_EMPLOYEE_ID HR.EMPLOYEES.EMPLOYEE_ID%TYPE, V_DEPARTMENT_ID HR.DEPARTMENTS.DEPARTMENT_ID%TYPE) RETURN VARCHAR2 IS
	V_NOME VARCHAR2(46);
	V_DEPART VARCHAR2(46);
BEGIN
	SELECT E.FIRST_NAME || ' ' || E.LAST_NAME , D.DEPARTMENT_NAME
    INTO V_NOME, V_DEPART
    FROM HR.EMPLOYEES E
    INNER JOIN HR.DEPARTMENTS D ON D.DEPARTMENT_ID = V_DEPARTMENT_ID
    WHERE E.EMPLOYEE_ID = V_EMPLOYEE_ID;
	RETURN 'NOME: ' || V_NOME || ' DEPARTMENTO: '|| V_DEPART;
EXCEPTION 
    WHEN NO_DATA_FOUND THEN
    	DBMS_OUTPUT.PUT_LINE('SEM REGISTRO');
    WHEN TOO_MANY_ROWS THEN
    	DBMS_OUTPUT.PUT_LINE('MAIS DE UM REGISTRO');
END NOMEDEPART;


--5
CREATE OR REPLACE FUNCTION TTSALARIO RETURN NUMBER IS
    TT_SALARIO NUMBER (9 , 2);
BEGIN
	SELECT SUM(SALARY)
    INTO TT_SALARIO
    FROM HR.EMPLOYEES;

	RETURN TT_SALARIO;    
END TTSALARIO;

--6
CREATE OR REPLACE FUNCTION NOVOSALARIO ( V_DEPARTMENT_ID HR.DEPARTMENTS.DEPARTMENT_ID%TYPE) RETURN NUMBER IS
	TT_SALARIO NUMBER (9 , 2);
BEGIN
  	UPDATE EMPLOYEES SET SALARY = (SALARY*0.01)
    WHERE DEPARTMENT_ID = V_DEPARTMENT_ID;

	SELECT SUM(SALARY)
    INTO TT_SALARIO
    FROM EMPLOYEES
        WHERE DEPARTMENT_ID = V_DEPARTMENT_ID;

	RETURN TT_SALARIO;   

EXCEPTION 
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('SEM REGISTRO');
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('MAIS DE UM REGISTRO');
END NOVOSALARIO;



--7
CREATE OR REPLACE PROCEDURE LISTAR_FUNCIONARIOS IS
BEGIN
    FOR R IN (
        SELECT 
            E.FIRST_NAME || ' ' || E.LAST_NAME AS NOME_COMPLETO,
            E.HIRE_DATE,
            E.PHONE_NUMBER,
            E.EMAIL,
            M.FIRST_NAME || ' ' || M.LAST_NAME AS NOME_GERENTE,
            D.DEPARTMENT_NAME,
            E.SALARY,
            E.COMMISSION_PCT
        FROM EMPLOYEES E
        LEFT JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
        LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
        ORDER BY E.LAST_NAME, E.FIRST_NAME
    ) LOOP
        DBMS_OUTPUT.PUT_LINE(
            'Nome: ' || R.NOME_COMPLETO || ' | Contratação: ' || TO_CHAR(R.HIRE_DATE, 'DD/MM/YYYY') || ' | Fone: ' || R.PHONE_NUMBER || ' | Email: ' || R.EMAIL || ' | Gerente: ' || R.NOME_GERENTE || ' | Departamento: ' || R.DEPARTMENT_NAME || ' | Salário: ' || R.SALARY || ' | Comissão: ' ||R.COMMISSION_PCT)
    
    END LOOP;
END LISTAR_FUNCIONARIOS;
